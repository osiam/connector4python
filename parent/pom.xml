<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.osiam</groupId>
    <artifactId>osiam-parent-pom</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>OSIAM Parent</name>
    <description>The parent POM for all OSIAM Projects</description>

    <scm>
        <connection>scm:git://git@github.com:osiam-dev/osiam.git</connection>
    </scm>

    <distributionManagement>
        <repository>
            <id>osiam-repository</id>
            <name>public evolvis release repository</name>
            <url>sftp://repo.osiam.org:/var/www/maven_repo/releases</url>
        </repository>
    </distributionManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.7</java.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- Groovy SDK
                LICENSE: Apache 2.0 according to http://grepcode.com/snapshot/repo1.maven.org/maven2/org.codehaus.groovy/groovy-all/1.8.6 -->
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>1.8.6</version>
                <scope>test</scope>
            </dependency>

            <!-- Spock testing framework for all kinds of tests
                LICENSE: Apache 2.0 according to http://code.google.com/p/spock/ -->
            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-core</artifactId>
                <version>0.6-groovy-1.8</version>
                <scope>test</scope>
            </dependency>

            <!-- Support for mocking concrete classes within Spock
                LICENSE: Apache 2.0 according to source package -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>2.2</version>
                <scope>test</scope>
            </dependency>

            <!-- Support for mocking classes without constructor within Spock
                LICENSE: Apache 2.0 according to http://objenesis.googlecode.com/svn/docs/license.html -->
            <dependency>
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>1.2</version>
                <scope>test</scope>
            </dependency>

          </dependencies>
    </dependencyManagement>


    <build>
        <plugins>

            <!-- Attaching sources to the jar files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Needed due to a problem with ssh -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.5</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.wagon</groupId>
                        <artifactId>wagon-ssh</artifactId>
                        <version>1.0-beta-7</version>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>

        <pluginManagement>
            <plugins>

                <!-- Configure the compiler plugin for Groovy -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3.2</version>
                    <extensions>true</extensions>
                    <configuration>
                        <compilerId>groovy-eclipse-compiler</compilerId>
                        <verbose>false</verbose>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.groovy</groupId>
                            <artifactId>groovy-eclipse-compiler</artifactId>
                            <version>2.6.0-01</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- Used from jenkins JaCoCo plugin to generate the coverage reports for sonar-->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.5.9.201207300726</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- at this time Spock does not support Maven 3, this is the workaround,
                        later we can use the Spock plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>
                        <includes>
                            <include>**/*Test.java</include>
                            <include>**/*Spec.java</include>
                        </includes>
                        <additionalClasspathElements>
                            <additionalClasspathElement>src/main/java</additionalClasspathElement>
                            <additionalClasspathElement>src/test/groovy</additionalClasspathElement>
                        </additionalClasspathElements>
                    </configuration>
                    <!--certain integration tests should only be executed in phase integration-test -->
                    <executions>
                        <execution>
                            <phase>integration-test</phase>
                            <configuration>
                                <includes>
                                    <include>**/*ST.java</include>
                                </includes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Eclipse support -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.8</version>
                    <configuration>
                        <additionalProjectnatures>
                            <projectnature>org.eclipse.jdt.groovy.core.groovyNature</projectnature>
                        </additionalProjectnatures>
                        <!-- Source includes is necessary to allow groovy files in the java
                                  folder, else eclipse will throw a filtering exception -->
                        <sourceIncludes>
                            <sourceInclude>**/*.groovy</sourceInclude>
                        </sourceIncludes>
                        <!-- Download sources will make maven download and attach source files
                                  where available -->
                        <downloadSources>true</downloadSources>
                        <downloadJavadocs>true</downloadJavadocs>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>
</project>
